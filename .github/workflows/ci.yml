name: SITH CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r sith/requirements.txt
        pip install pytest-cov flake8 black mypy
    
    - name: Lint with flake8
      run: |
        flake8 sith/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 sith/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check sith/ --line-length 127
    
    - name: Type check with mypy
      run: |
        mypy sith/ --ignore-missing-imports --no-strict-optional
    
    - name: Run tests
      run: |
        cd sith
        python -m pytest tests/ -v --cov=sith_core --cov=sith_backends --cov=sith_emulator --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./sith/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r sith/requirements.txt
        pip install build twine
    
    - name: Build package
      run: |
        cd sith
        python -m build
    
    - name: Check package
      run: |
        cd sith
        twine check dist/*

  demo:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r sith/requirements.txt
    
    - name: Run demo
      run: |
        cd sith
        python demo.py

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r sith/requirements.txt
        pip install safety bandit
    
    - name: Security check with safety
      run: |
        safety check -r sith/requirements.txt
    
    - name: Security check with bandit
      run: |
        bandit -r sith/ -f json -o bandit-report.json || true
        bandit -r sith/ -f txt

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r sith/requirements.txt
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        # This would build docs if we had sphinx setup
        echo "Documentation build would go here"
    
    - name: Check documentation links
      run: |
        # This would check for broken links
        echo "Link checking would go here"